<launch>
<!-- ============ Arguments ============ -->
  <!-- General -->
  <arg name="namespace" default="data"/> 
  <arg name="visualize" default="true"/> 

  <!-- Use ROS Bag -->
  <arg name="bag_speed" default="5.0"/> 
  
  <!-- use the rio dataset or not -->
  <arg name="use_rio" default="false"/>

  <!-- panoptic prediction by detectron or ground truth-->
  <arg name="use_detectron" default="false"/>  
  
  <!-- Robot model path -->
  <arg name="robot_mesh_file" default="$(find panoptic_mapping_ros)/config/model/camera.dae"/> 

  <!-- Flat Dataset args -->
  <!-- Please download the dataset from: https://projects.asl.ethz.ch/datasets/doku.php?id=panoptic_mapping-->
  <arg name="data_path_flat" default="/media/yuepan/DATA/1_data/flat_dataset/rosbag/run1.bag"/> 

  <arg name="base_path" default="/media/yuepan/SeagateNew/1_data/flat_dataset/run1"/> 
  <arg name="play_rate" default="2"/>  <!-- Realtime factor (how many frame per second) -->
  <arg name="wait_time" default="1"/>  <!-- s -->
  <arg name="max_frames" default="1000"/> <!-- 90 -->
    
  <!-- Mapper -->
  <arg name="config" default="flat_panmap"/> <!-- flat_panmap (the multi-resolution mapping), flat_mono -->
  <arg name="shutdown_when_finished" default="false"/> 
  
  <!-- Save/Load maps for change detection -->
  <!-- Not used  -->
  <arg name="load_map" default = "false"/>
  <arg name="load_file" default = "/media/yuepan/SeagateNew/1_data/flat_dataset/results/run1.panmap"/>


<!-- ============ Run ============ -->
  <!-- Play data -->
  <arg name="wait" default="true" if="$(arg load_map)"/>
  <!-- <include file="$(find panoptic_mapping_utils)/launch/play_flat_dataset.launch" pass_all_args="true" unless="$(arg use_rio)" />
  <include file="$(find panoptic_mapping_utils)/launch/play_rio_dataset.launch" pass_all_args="true" if="$(arg use_rio)" />  -->
 
  <!-- use a rosbag instead -->
  <node name="player" pkg="rosbag" type="play" output="screen" args=" -r $(arg bag_speed) $(arg data_path_flat) --clock"/>
  
  <!-- Mapper -->
  <node name="panoptic_mapper" pkg="panoptic_mapping_ros" type="panoptic_mapper_node" output="screen" >

    <!-- Config -->
    <rosparam file="$(find panoptic_mapping_ros)/config/mapper/$(arg config).yaml"/>
    <rosparam file="$(find panoptic_mapping_ros)/config/calib/flat_calib.yaml"/>
    <param name="robot_mesh_file" value="$(arg robot_mesh_file)"/>
    <!-- Input -->
    <remap from="color_image_in" to="$(arg namespace)/color_image"/>
    <remap from="depth_image_in" to="$(arg namespace)/depth_image"/>
    <remap from="segmentation_image_in" to="$(arg namespace)/segmentation_image"/>
    <remap from="labels_in" to="$(arg namespace)/segmentation_labels"/>
  </node>  
  
  <!-- Map loader -->
  <node name="map_loader" pkg="panoptic_mapping_utils" type="map_loader.py" if="$(arg load_map)" output="screen">
     <param name="path" value="$(arg load_file)" /> 
     <param name="srv_name" value="/panoptic_mapper/load_map" /> 
     <param name="delay" value="0.1" /> 
  </node>  
  
  <!-- RVIZ Visualization-->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find panoptic_mapping_ros)/config/rviz/vis_flat.rviz" output="screen" if="$(arg visualize)"/>

</launch>
